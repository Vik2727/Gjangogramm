"""
Django settings for djangogrammapp project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import cloudinary.api
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8=ij=-y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'social_django',
    'cloudinary_storage',
    'cloudinary',
    'main',
    'registration',
    'user',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'djangogrammapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangogrammapp.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'test': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "test_db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "main/static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ALLOWED_HOSTS = ['3.67.254.11']  # for AWS
# ALLOWED_HOSTS = []  # for localhost

# Emailing settings
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # for localhost
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # for AWS
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_FROM = 'viktor.zakora@gmail.com'
EMAIL_HOST_USER = 'viktor.zakora@gmail.com'
EMAIL_HOST_PASSWORD = 'qjgcwfejwshmkeza'
EMAIL_PORT = 587
EMAIL_USE_TLS = True


# Upload images to Cloudinary
cloudinary.config(
    cloud_name="dc0ummyff",
    api_key="127249115252396",
    api_secret="urOUSS_pz9kqW6AlwUZ2i4JymEU",
)

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dc0ummyff',
    'API_KEY': '127249115252396',
    'API_SECRET': 'urOUSS_pz9kqW6AlwUZ2i4JymEU',
}

MAX_FILE_SIZE_MB = 10
IMAGE_THUMBNAIL_SIZE = (1024, 1024)

# Sign up via GitHub and Google
SOCIAL_AUTH_GITHUB_KEY = 'd19b13cf9fb1f6a97441'
SOCIAL_AUTH_GITHUB_SECRET = 'e7fc7704716029885e94cd3032c16b8b2e09f902'
SOCIAL_AUTH_GITHUB_CALLBACK_URL = 'http://3.67.254.11:8000/social-auth/complete/github/'
LOGIN_REDIRECT_URL = 'user'

# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'key_google'
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'secret_key_google'

AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    # 'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

